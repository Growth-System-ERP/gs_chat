(()=>{var d=class{constructor(e){this.chatInput=e,this.isActive=!1,this.dropdown=null,this.currentDoctype=null,this.setupEvents()}setupEvents(){let e=this;this.chatInput.on("input",function(t){let s=window.getSelection().focusNode,i=$(s).closest(".doctype-selector"),n=$(s).closest(".document-selector");if(i.length&&e.dropdown){let a=i.text().trim().toLowerCase();e.filterDropdown(a)}else if(n.length&&e.dropdown){let a=n.text().trim().toLowerCase();e.filterDropdown(a)}}),this.chatInput.on("keydown",function(t){if(!e.isActive){t.key==="/"&&!t.shiftKey&&!t.ctrlKey&&(t.preventDefault(),e.createEntitySelector(),e.showDoctypeDropdown());return}switch(t.key){case"Escape":t.preventDefault(),e.hideDropdown(),e.removeEntitySelector();break;case"Backspace":e.handleBackspace(t);break;case"ArrowUp":case"ArrowDown":e.dropdown&&(t.preventDefault(),e.navigateDropdown(t.key==="ArrowDown"?"next":"prev"));break;case"Enter":e.dropdown&&(t.preventDefault(),e.selectActiveItem());break}}),$(document).on("click",function(t){e.isActive&&e.dropdown&&!$(t.target).closest(".slash-command-dropdown, .entity-selector").length&&(e.hideDropdown(),e.removeEntitySelector())}),$(window).on("resize scroll",()=>{this.isActive&&this.dropdown&&this.positionDropdown()})}handleBackspace(e){let t=window.getSelection(),s=t.focusNode,i=t.anchorOffset;if(s.nodeType===Node.TEXT_NODE&&i===0){let c=s.previousSibling;if(c&&$(c).hasClass("entity-selector")&&$(c).hasClass("complete-entity")){e.preventDefault();let r=$(c);r.removeClass("complete-entity");let l=r.find('[contenteditable="false"]').last();l.length&&(l.attr("contenteditable","true"),l.addClass("document-selector"),this.focusEntityPart(l[0]),this.currentDoctype=r.attr("data-doctype"),this.currentDoctypeSelected=!0,this.isActive=!0,this.showDocumentDropdown(this.currentDoctype));return}}let n=$(s).closest(".document-selector");if(n.length&&n.text().trim()===""){e.preventDefault(),this.revertToDocTypeSelection(n);return}let a=$(s).closest(".doctype-selector");if(a.length&&a.text().trim()===""){e.preventDefault(),this.removeEntitySelector();return}}revertToDocTypeSelection(e){let t=e.closest(".entity-selector");t.find(".document-selector").remove(),t.find(".entity-separator").remove();let s=t.find(".selected-doctype");s.attr("contenteditable","true"),this.focusEntityPart(s[0]),this.hideDropdown(),this.showDoctypeDropdown(),this.currentDoctypeSelected=!1}selectActiveItem(){let e=this.dropdown.find(".dropdown-item.active");if(e.length){let t=e.data("value"),s=e.text();this.selectItem({value:t,label:s},this.currentDoctypeSelected?"document":"doctype")}}createEntitySelector(){let e=window.getSelection();if(!e.rangeCount)return;let t=e.getRangeAt(0),s=$('<span class="entity-selector"></span>'),i=$('<span class="entity-part doctype-selector" contenteditable="true" data-placeholder="type..."></span>');s.append(i),t.insertNode(s[0]),this.focusEntityPart(i[0]),this.isActive=!0,this.currentDoctypeSelected=!1}focusEntityPart(e){let t=document.createRange(),s=window.getSelection();t.selectNodeContents(e),t.collapse(!1),s.removeAllRanges(),s.addRange(t),e.focus()}removeEntitySelector(){this.chatInput.find(".entity-selector").remove(),this.isActive=!1}showDoctypeDropdown(){let e=this;frappe.call({method:"gs_chat.controllers.entity_creator.get_doctype_suggestions",callback:function(t){t.message&&t.message.length?e.createDropdown(t.message,"doctype"):(e.isActive=!1,e.removeEntitySelector(),frappe.show_alert({message:__("No accessible doctypes found"),indicator:"red"}))}})}createDropdown(e,t){this.hideDropdown(),this.dropdownItems=e,this.dropdown=$('<div class="slash-command-dropdown"></div>');let s=$('<div class="dropdown-items"></div>');e.forEach((i,n)=>{let a=$(`<div class="dropdown-item" data-value="${i.value}">${i.label}</div>`);n===0&&a.addClass("active"),a.on("click",()=>{this.selectItem(i,t)}),s.append(a)}),this.dropdown.append(s),$("body").append(this.dropdown),this.positionDropdown()}filterDropdown(e){if(!this.dropdown||!this.dropdownItems)return;let t=this.dropdown.find(".dropdown-items");t.empty();let s=this.dropdownItems.filter(i=>i.label.toLowerCase().includes(e));if(s.length===0){t.append('<div class="dropdown-item no-results">No matches found</div>');return}s.forEach((i,n)=>{let a=$(`<div class="dropdown-item" data-value="${i.value}">${i.label}</div>`);n===0&&a.addClass("active"),a.on("click",()=>{this.selectItem(i,this.currentDoctypeSelected?"document":"doctype")}),t.append(a)})}navigateDropdown(e){if(!this.dropdown)return;let t=this.dropdown.find(".dropdown-item:not(.no-results)"),s=this.dropdown.find(".dropdown-item.active"),i=t.index(s),n;e==="next"?n=(i+1)%t.length:n=(i-1+t.length)%t.length,s.removeClass("active"),t.eq(n).addClass("active"),this.scrollToItem(t.eq(n))}positionDropdown(){if(!this.dropdown)return;let e=this.chatInput.find(".entity-selector");if(!e.length){this.hideDropdown();return}let t=e.offset(),s=e.outerHeight(),i=this.dropdown.outerHeight(),n=$(window).height(),a=n-(t.top-window.scrollY+s),c=t.top-window.scrollY;i>a&&c>a?this.dropdown.css({position:"fixed",bottom:n-t.top+5,left:t.left,top:"auto",zIndex:9999}):this.dropdown.css({position:"fixed",top:t.top+s+5,left:t.left,bottom:"auto",zIndex:9999})}scrollToItem(e){let t=e.parent(),s=t.height(),i=e.position().top,n=e.outerHeight();i<0?t.scrollTop(t.scrollTop()+i):i+n>s&&t.scrollTop(t.scrollTop()+i+n-s)}selectItem(e,t){if(t==="doctype"){this.currentDoctype=e.value,this.currentDoctypeSelected=!0;let s=this.chatInput.find(".entity-selector"),i=s.find(".doctype-selector");i.text(e.label),i.attr("contenteditable","false"),s.append('<span class="entity-separator">/</span>');let n=$('<span class="entity-part document-selector" contenteditable="true" data-placeholder="type..."></span>');s.append(n),this.focusEntityPart(n[0]),n.on("input",()=>{if(this.dropdown){let a=n.text().trim().toLowerCase();this.filterDropdown(a)}}),this.hideDropdown(),this.showDocumentDropdown(e.value)}else{let s=this.chatInput.find(".entity-selector"),i=s.find(".document-selector");i.text(e.label),i.attr("contenteditable","false"),s.attr("data-doctype",this.currentDoctype),s.attr("data-document",e.value),s.addClass("complete-entity"),this.hideDropdown(),this.isActive=!1;let n=document.createTextNode("\xA0");s.after(n);let a=window.getSelection(),c=document.createRange();c.setStartAfter(n),c.setEndAfter(n),a.removeAllRanges(),a.addRange(c),this.chatInput.focus()}}showDocumentDropdown(e){let t=this;frappe.call({method:"gs_chat.controllers.entity_creator.get_document_suggestions",args:{doctype:e,partial_input:""},callback:function(s){s.message&&s.message.length?t.createDropdown(s.message,"document"):(t.isActive=!1,frappe.show_alert({message:__("No documents found for {0}",[e]),indicator:"orange"}))}})}hideDropdown(){this.dropdown&&(this.dropdown.remove(),this.dropdown=null)}getEntityReferences(){let e=[];return this.chatInput.find(".entity-selector").each(function(){let t=$(this).attr("data-doctype"),s=$(this).attr("data-document");t&&s&&e.push({doctype:t,document:s})}),e}};var h=class{constructor(e,t){this.chatInput=e,this.onResult=t,this.recognition=null,this.isListening=!1,this.supportedLanguages={"en-US":"English (US)","en-GB":"English (UK)","es-ES":"Spanish","fr-FR":"French","de-DE":"German","it-IT":"Italian","pt-BR":"Portuguese (Brazil)","zh-CN":"Chinese (Mandarin)","ja-JP":"Japanese","ko-KR":"Korean","hi-IN":"Hindi","ar-SA":"Arabic","ru-RU":"Russian"},this.currentLanguage="en-US",this.initializeSpeechRecognition()}initializeSpeechRecognition(){let e=window.SpeechRecognition||window.webkitSpeechRecognition;return e?(this.recognition=new e,this.recognition.continuous=!1,this.recognition.interimResults=!0,this.recognition.maxAlternatives=1,this.recognition.lang=this.currentLanguage,this.recognition.onstart=()=>{this.isListening=!0,this.updateUI(!0)},this.recognition.onend=()=>{this.isListening=!1,this.updateUI(!1)},this.recognition.onresult=t=>{let s="",i="";for(let n=t.resultIndex;n<t.results.length;n++){let a=t.results[n][0].transcript;t.results[n].isFinal?s+=a+" ":i+=a}i&&this.showInterimResult(i),s&&this.processFinalResult(s.trim())},this.recognition.onerror=t=>{console.log(t),console.error("Speech recognition error:",t.error),this.handleError(t.error),this.isListening=!1,this.updateUI(!1)},!0):(console.warn("Speech recognition not supported"),!1)}toggle(){this.isListening?this.stop():this.start()}start(){if(!this.recognition){frappe.show_alert({message:__("Speech recognition not supported in your browser"),indicator:"red"});return}navigator.mediaDevices.getUserMedia({audio:!0}).then(()=>{this.recognition.lang=this.currentLanguage,this.recognition.start()}).catch(e=>{frappe.show_alert({message:__("Microphone access denied"),indicator:"red"})})}stop(){this.recognition&&this.isListening&&this.recognition.stop()}setLanguage(e){this.supportedLanguages[e]&&(this.currentLanguage=e,localStorage.setItem("chatbot-voice-language",e))}showInterimResult(e){let t=this.chatInput.find(".voice-interim");t.length?t.text(e):this.chatInput.append(`<span class="voice-interim">${e}</span>`)}processFinalResult(e){this.chatInput.find(".voice-interim").remove();let t=this.chatInput.text().trim(),s=t?t+" "+e:e;this.chatInput.text(s),this.moveCursorToEnd(),this.onResult&&this.onResult(e)}moveCursorToEnd(){let e=document.createRange(),t=window.getSelection();e.selectNodeContents(this.chatInput[0]),e.collapse(!1),t.removeAllRanges(),t.addRange(e),this.chatInput[0].focus()}handleError(e){let t={"no-speech":__("No speech detected. Please try again."),"audio-capture":__("No microphone found."),"not-allowed":__("Microphone permission denied."),network:__("Network error. Please check your connection.")};frappe.show_alert({message:t[e]||__("Speech recognition error: ")+e,indicator:"red"})}updateUI(e){let t=$(".voice-input-button");e?(t.addClass("listening"),t.find("i").removeClass("fa-microphone").addClass("fa-microphone-slash")):(t.removeClass("listening"),t.find("i").removeClass("fa-microphone-slash").addClass("fa-microphone"))}createUI(){let e=$(`
            <button class="btn btn-sm voice-input-button" title="${__("Voice Input")}">
                <i class="fa fa-microphone"></i>
            </button>
        `),t=$(`
            <select class="voice-language-selector" title="${__("Select Language")}">
                ${Object.entries(this.supportedLanguages).map(([i,n])=>`<option value="${i}" ${i===this.currentLanguage?"selected":""}>${n}</option>`).join("")}
            </select>
        `);e.on("click",()=>this.toggle()),t.on("change",i=>this.setLanguage(i.target.value));let s=localStorage.getItem("chatbot-voice-language");return s&&this.supportedLanguages[s]&&(this.currentLanguage=s,t.val(s)),{voiceButton:e,langSelector:t}}};frappe.provide("gs_chat");gs_chat.ChatbotWidget=class{constructor(){this.messages=[],this.isOpen=!1,this.slashCommands=null,this.conversations=[],this.currentConversationId=null,this.sidebarOpen=!1,this.setupIcon(),this.fetchConversations(),this.autoSendAfterVoice=localStorage.getItem("chatbot-auto-send-voice")==="true",this.voiceShortcutEnabled=localStorage.getItem("chatbot-voice-shortcut")!=="false"}setupIcon(){let o=$(`
            <li class="nav-item dropdown dropdown-notifications dropdown-mobile chatbot-icon-open">
                <a class="nav-link" data-toggle="dropdown" aria-expanded="false" 
                   title="Growth Assistant" href="#" onclick="return false;">
                    <svg class="icon-sm" fill="var(--icon-stroke)" stroke-width="0" viewBox="0 0 32 32">
                        <path d="M16,19a6.9908,6.9908,0,0,1-5.833-3.1287l1.666-1.1074a5.0007,5.0007,0,0,0,8.334,0l1.666,1.1074A6.9908,6.9908,0,0,1,16,19Z"/><path d="M20,8a2,2,0,1,0,2,2A1.9806,1.9806,0,0,0,20,8Z"/><path d="M12,8a2,2,0,1,0,2,2A1.9806,1.9806,0,0,0,12,8Z"/><path d="M17.7358,30,16,29l4-7h6a1.9966,1.9966,0,0,0,2-2V6a1.9966,1.9966,0,0,0-2-2H6A1.9966,1.9966,0,0,0,4,6V20a1.9966,1.9966,0,0,0,2,2h9v2H6a3.9993,3.9993,0,0,1-4-4V6A3.9988,3.9988,0,0,1,6,2H26a3.9988,3.9988,0,0,1,4,4V20a3.9993,3.9993,0,0,1-4,4H21.1646Z"/>
                    </svg>
                </a>
            </li>
        `);$(".dropdown-help").before(o),o.on("click",()=>(this.toggleChatbot(),!1))}toggleChatbot(){this.isOpen?this.closeChat():this.openChat()}openChat(){this.chatDialog||(this.createDialog(),this.setupResizeHandle(),this.loadSavedDimensions(),this.setupEvents(),this.renderConversationList(),this.slashCommands=new d(this.chatInput)),this.chatDialog.addClass("open"),this.chatDialog.removeClass("minimized"),this.isOpen=!0,this.chatInput.focus(),this.messages.length===0&&!this.currentConversationId&&this.startNewConversation(),$(document).trigger("growth_chatbot_loaded")}createDialog(){this.chatDialog=$(`
            <div class="modal-content gs-chatbot-widget sidebar-hidden">
                <div class="chat-sidebar">
                    <div class="conversation-list">
                        <div class="conversation-item new-chat-item">
                            <div class="conversation-title"><i class="fa fa-plus"></i> New Chat</div>
                        </div>
                    </div>
                </div>
                <div class="chat-main">
                    <div class="modal-header">
                        <div class="fill-width flex title-section">
                            <button class="btn btn-sm toggle-sidebar-button">
                                ${frappe.utils.icon("list")}
                            </button>
                            <span class="indicator hidden"></span>
                            <h4 class="modal-title">G'Bot</h4>
                        </div>
                        <div class="modal-actions">
                            <button class="btn btn-sm action-button" data-action="refresh" title="Reset Conversation">
                                ${frappe.utils.icon("refresh")}
                            </button>
                            <button class="btn btn-modal-minimize action-button btn-link" data-action="minimize" title="Minimize">
                                ${frappe.utils.icon("collapse")}
                            </button>
                            <button class="btn btn-modal-close btn-link action-button" data-action="close" title="Close">
                                ${frappe.utils.icon("close-alt")}
                            </button>
                        </div>
                    </div>
                    <div class="modal-body chat-body ui-front">
                        <div class="chatbot-messages"></div>
                        <div class="typing-indicator d-none">
                            <span></span><span></span><span></span>
                        </div>
                    </div>
                    <div class="chat-footer">
                        <div class="voice-controls hidden">
                            <select class="voice-language-selector" title="${__("Select Language")}">
                                <option value="en-US">English (US)</option>
                                <option value="es-ES">Spanish</option>
                                <option value="fr-FR">French</option>
                                <option value="de-DE">German</option>
                                <option value="zh-CN">Chinese</option>
                                <option value="hi-IN">Hindi</option>
                                <option value="ar-SA">Arabic</option>
                                <option value="ja-JP">Japanese</option>
                                <option value="ko-KR">Korean</option>
                            </select>
                        </div>
                        <div class="chat-input-container">
                            <span class="chat-input" data-placeholder="Ask anything..." contenteditable="true" enterkeyhint="enter" tabindex="0"></span>
                            <button class="hidden btn btn-sm voice-input-button" title="${__("Voice Input")}">
                                <i class="fa fa-microphone"></i>
                            </button>
                            <button class="btn btn-primary btn-sm send-button">
                                <i class="fa fa-paper-plane"></i>
                            </button>
                        </div>
                    </div>
                </div>
                <div class="resize-handle"></div>
            </div>
            `),$("body").append(this.chatDialog)}setupEvents(){let o=this;this.chatBody=this.chatDialog.find(".chat-body"),this.messagesContainer=this.chatDialog.find(".chatbot-messages"),this.chatInput=this.chatDialog.find(".chat-input"),this.typingIndicator=this.chatDialog.find(".typing-indicator"),this.sendButton=this.chatDialog.find(".send-button"),this.conversationList=this.chatDialog.find(".conversation-list"),this.newChatItem=this.chatDialog.find(".new-chat-item"),this.toggleSidebarButton=this.chatDialog.find(".toggle-sidebar-button"),this.chatInput.on("keydown",function(e){if(e.key==="Enter"&&!e.shiftKey&&!e.ctrlKey&&!e.metaKey&&!o.slashCommands.isActive)return e.preventDefault(),o.sendMessage(),!1}),this.sendButton.on("click",function(){o.sendMessage()}),this.chatDialog.find(".action-button").on("click",function(e){let t=$(e.currentTarget).data("action");t==="refresh"?o.resetConversation():t==="minimize"?o.minimizeChat():t==="close"&&o.closeChat()}),this.newChatItem.on("click",function(){o.startNewConversation()}),this.toggleSidebarButton.on("click",function(){o.toggleSidebar()}),this.fixPlaceholder(),this.setupVoiceInput(),this.setupKeyboardShortcuts()}toggleSidebar(){this.chatDialog.toggleClass("sidebar-hidden"),this.sidebarOpen=!this.chatDialog.hasClass("sidebar-hidden"),localStorage&&localStorage.setItem("chatbot-sidebar-open",this.sidebarOpen?"1":"0")}fetchConversations(){let o=this;frappe.call({method:"gs_chat.controllers.chat.get_conversations",callback:e=>{e.message&&e.message.success?o.conversations=e.message.conversations||[]:console.error("Failed to fetch conversations:",e.message)}})}renderConversationList(){let o=this;if(this.conversationList.find(".conversation-item:not(.new-chat-item)").remove(),!this.conversationList.find(".new-chat-item").length){let e=$(`
                <div class="conversation-item new-chat-item">
                    <div class="conversation-title"><i class="fa fa-plus"></i> New Chat</div>
                </div>
            `);e.on("click",function(){o.startNewConversation()}),this.conversationList.prepend(e),this.newChatItem=e}if(this.conversations.length===0){this.conversationList.append('<div class="empty-conversation-placeholder">No previous conversations</div>');return}this.conversations.sort((e,t)=>new Date(t.last_updated)-new Date(e.last_updated)),this.conversations.forEach(e=>{let t=frappe.datetime.prettyDate(e.last_updated),s=e.title||"Conversation "+frappe.datetime.str_to_user(e.creation).slice(0,10),i=$(`
                <div class="conversation-item" data-conversation-id="${e.name}">
                    <div class="conversation-title">${frappe.utils.escape_html(s)}</div>
                    <div class="conversation-date">${t}</div>
                </div>
            `);e.name===o.currentConversationId&&i.addClass("active"),i.on("click",function(){let n=$(this).data("conversation-id");o.loadConversation(n),o.conversationList.find(".conversation-item").removeClass("active"),$(this).addClass("active")}),this.newChatItem.after(i)})}startNewConversation(){this.messagesContainer.empty(),this.messages=[],this.currentConversationId=null,this.conversationList.find(".conversation-item").removeClass("active"),this.newChatItem.addClass("active"),this.addBotMessage("Hello! I'm your Growth Assistant. You can ask me questions about ERP features or your data. Try typing `/` to access specific documents.",!1,!1),this.chatInput.focus()}loadConversation(o){let e=this;e.chatDialog.addClass("loading-conversation"),e.messagesContainer.html('<div class="text-center p-4">Loading conversation...</div>'),frappe.call({method:"gs_chat.controllers.chat.get_conversation_messages",args:{conversation_id:o},callback:t=>{if(t.message&&t.message.success){e.messagesContainer.empty(),e.messages=[],e.currentConversationId=o;let s=t.message.messages||[];s.length===0?e.addBotMessage("This conversation is empty. You can start by asking a question."):s.forEach(i=>{i.message_type==="user"?e.addUserMessage(i.content,!1):i.message_type==="bot"&&e.addBotMessage(i.content,i.is_error,!1)}),e.scrollToBottom(),setTimeout(()=>{e.chatDialog.removeClass("loading-conversation")},50)}else console.error("Failed to load conversation:",t.message),e.messagesContainer.html('<div class="text-center p-4 text-danger">Failed to load conversation</div>'),e.chatDialog.removeClass("loading-conversation")}})}closeChat(){this.chatDialog&&this.chatDialog.removeClass("open"),this.isOpen=!1}minimizeChat(){this.chatDialog.toggleClass("minimized")}getQueryText(){let o=[],e=t=>{if(t.nodeType===Node.TEXT_NODE)o.push(t.textContent);else if(t.nodeType===Node.ELEMENT_NODE)if(t.classList.contains("entity-selector")){let s=t.getAttribute("data-doctype"),i=t.getAttribute("data-document");s&&i&&o.push(`/${s}/${i}`)}else t.tagName==="BR"?o.push(`
`):t.tagName==="P"||t.tagName==="DIV"?(Array.from(t.childNodes).forEach(s=>{e(s)}),t.nextSibling&&o.push(`
`)):Array.from(t.childNodes).forEach(s=>{e(s)})};return Array.from(this.chatInput[0].childNodes).forEach(t=>{e(t)}),o.join("")}sendMessage(){let o=this.getQueryText().trim();if(!o)return;let e=this.slashCommands.getEntityReferences();this.addUserMessage(o,!1),this.chatInput.html(""),this.showTypingIndicator();let t=null;this.currentConversationId||(t=$(`
                <div class="conversation-item active" data-conversation-id="pending">
                    <div class="conversation-title"><i class="fa fa-circle-o-notch fa-spin"></i> ${o.substring(0,20)}${o.length>20?"...":""}</div>
                </div>
            `),this.newChatItem.removeClass("active").after(t)),frappe.call({method:"gs_chat.controllers.chat.process_message",args:{query:o,references:e,conversation_id:this.currentConversationId||null},callback:s=>{if(this.hideTypingIndicator(),s.message&&s.message.success){s.message.conversation_id!=this.currentConversationId&&(this.currentConversationId=s.message.conversation_id,t&&t.remove(),this.fetchConversations());let i=this.addBotMessage(s.message.response,!1,!1);this.addFeedbackButtons(i,s.message.response),this.scrollToBottom()}else this.addBotMessage(s.message&&s.message.error?s.message.error:"Sorry, I encountered an error. Please try again.",!0,!1),!this.currentConversationId&&t&&(t.remove(),this.newChatItem.addClass("active"))},error:()=>{this.hideTypingIndicator(),this.addBotMessage("Sorry, I couldn't connect to the server. Please check your connection and try again.",!0,!1),!this.currentConversationId&&t&&(t.remove(),this.newChatItem.addClass("active"))}})}addUserMessage(o,e=!0){let t=$(`
            <div class="chat-message user-message">
                <div class="chat-bubble">
                    ${frappe.markdown(o)}
                </div>
            </div>
        `);this.messagesContainer.append(t),this.scrollToBottom(),this.messages.push({type:"user",content:o}),e&&this.currentConversationId&&frappe.call({method:"gs_chat.controllers.chat.save_message",args:{conversation_id:this.currentConversationId,message_type:"user",content:o},callback:s=>{(!s.message||!s.message.success)&&console.error("Failed to save user message:",s.message)}})}addBotMessage(o,e=!1,t=!0){let s=e?"error":"",i=$(`
            <div class="chat-message bot-message">
                <div class="chat-bubble ${s}">
                    ${frappe.markdown(o)}
                </div>
            </div>
        `);return this.messagesContainer.append(i),this.messages.push({type:"bot",content:o,isError:e}),t&&this.currentConversationId&&frappe.call({method:"gs_chat.controllers.chat.save_message",args:{conversation_id:this.currentConversationId,message_type:"bot",content:o,is_error:e?1:0},callback:n=>{(!n.message||!n.message.success)&&console.error("Failed to save bot message:",n.message)}}),i}addFeedbackButtons(o,e){let t=$(`
            <div class="message-feedback">
                <span>${__("Was this helpful?")}</span>
                <button class="btn btn-xs btn-default feedback-button" data-feedback="positive">
                    <i class="fa fa-thumbs-up"></i>
                </button>
                <button class="btn btn-xs btn-default feedback-button" data-feedback="negative">
                    <i class="fa fa-thumbs-down"></i>
                </button>
            </div>
        `);o.append(t),t.find(".feedback-button").on("click",s=>{$(s.currentTarget).data("feedback")==="positive"?(this.submitFeedback(e,"Positive"),t.html(`<span class="text-success">${__("Thanks for your feedback!")}</span>`)):this.showFeedbackForm(t,e)})}showFeedbackForm(o,e){let t=new frappe.ui.Dialog({title:__("Provide Feedback"),fields:[{fieldname:"feedback_comment",fieldtype:"Small Text",label:__("What was wrong with this response?"),reqd:!0}],primary_action_label:__("Submit"),primary_action:s=>{this.submitFeedback(e,"Negative",s.feedback_comment),o.html(`<span class="text-success">${__("Thanks for your feedback!")}</span>`),t.hide()}});t.show()}submitFeedback(o,e,t=null){let s=frappe.utils.get_random(10);frappe.call({method:"erpnext_chatbot.api.llm_interface.provide_feedback",args:{interaction_id:s,feedback:e,comment:t},callback:i=>{(!i.message||!i.message.success)&&console.error("Failed to submit feedback:",i.message)}})}resetConversation(){frappe.confirm(__("This will clear your conversation history. Continue?"),()=>{this.currentConversationId?(this.messagesContainer.empty(),this.messages=[],this.addBotMessage("Hello! I'm your Growth Assistant. You can ask me questions about ERP features or your data. Try typing `/` to access specific documents."),frappe.call({method:"gs_chat.controllers.chat.reset_conversation",args:{conversation_id:this.currentConversationId},callback:o=>{o.message&&o.message.success?this.fetchConversations():console.error("Failed to reset conversation:",o.message)}})):this.startNewConversation()})}fixPlaceholder(){let o=this.chatInput;function e(t){let s=t.clone();return s.find("br").remove(),s.html().trim()===""}o.on("input focus blur",function(){let t=e($(this));$(this).toggleClass("effectively-empty",t)}),o.trigger("blur")}showTypingIndicator(){this.typingIndicator.removeClass("d-none")}hideTypingIndicator(){this.typingIndicator.addClass("d-none")}scrollToBottom(){let o=this.chatDialog.find(".chatbot-messages")[0];o&&(o.scrollTop=o.scrollHeight)}setupResizeHandle(){let o=this,e,t,s,i;this.chatDialog.find(".resize-handle").on("mousedown",function(r){r.preventDefault(),e=r.clientX,t=r.clientY,s=o.chatDialog.outerWidth(),i=o.chatDialog.outerHeight(),$(document).on("mousemove.chatbot-resize",a),$(document).on("mouseup.chatbot-resize",c)});function a(r){let l=s+(e-r.clientX),g=i+(t-r.clientY),p=Math.max(550,l),u=Math.max(350,g);o.chatDialog.css({width:p+"px",height:u+"px"}),localStorage&&(localStorage.setItem("chatbot-width",p),localStorage.setItem("chatbot-height",u))}function c(){$(document).off("mousemove.chatbot-resize"),$(document).off("mouseup.chatbot-resize"),o.scrollToBottom()}}loadSavedDimensions(){if(localStorage){let o=localStorage.getItem("chatbot-width"),e=localStorage.getItem("chatbot-height");o&&e?this.chatDialog.css({width:o+"px",height:e+"px"}):this.chatDialog.css({width:"750px",height:"500px"}),localStorage.getItem("chatbot-sidebar-open")==="0"?(this.chatDialog.addClass("sidebar-hidden"),this.sidebarOpen=!1):this.sidebarOpen=!0}}setupVoiceInput(){let o=this;this.voiceManager=new h(this.chatInput,i=>{o.autoSendAfterVoice&&setTimeout(()=>o.sendMessage(),500)});let e=this.chatDialog.find(".voice-input-button"),t=this.chatDialog.find(".voice-language-selector");e.on("click",()=>{o.voiceManager.toggle()}),t.on("change",i=>{o.voiceManager.setLanguage(i.target.value)});let s=localStorage.getItem("chatbot-voice-language");s&&(t.val(s),o.voiceManager.setLanguage(s)),this.voiceManager.updateUI=i=>{i?(e.addClass("listening"),e.find("i").removeClass("fa-microphone").addClass("fa-microphone-slash"),o.chatInput.addClass("voice-active")):(e.removeClass("listening"),e.find("i").removeClass("fa-microphone-slash").addClass("fa-microphone"),o.chatInput.removeClass("voice-active"))},this.voiceManager.showInterimResult=i=>{let n=o.chatInput.find(".voice-interim");n.length?n.text(i):o.chatInput.append(`<span class="voice-interim">${i}</span>`)},this.voiceManager.processFinalResult=i=>{o.chatInput.find(".voice-interim").remove(),o.getQueryText().trim()?o.chatInput.append(document.createTextNode(" "+i)):o.chatInput.text(i),o.voiceManager.moveCursorToEnd(),o.chatInput.trigger("input")}}toggleAutoSendVoice(){this.autoSendAfterVoice=!this.autoSendAfterVoice,localStorage.setItem("chatbot-auto-send-voice",this.autoSendAfterVoice),frappe.show_alert({message:this.autoSendAfterVoice?__("Auto-send after voice input enabled"):__("Auto-send after voice input disabled"),indicator:"blue"})}setupKeyboardShortcuts(){let o=this;$(document).on("keydown",function(e){o.isOpen&&o.voiceShortcutEnabled&&e.ctrlKey&&e.shiftKey&&e.key==="V"&&(e.preventDefault(),o.voiceManager&&o.voiceManager.toggle())}),this.chatInput.on("keydown",function(e){e.key==="Escape"&&o.voiceManager&&o.voiceManager.isListening&&(e.preventDefault(),o.voiceManager.stop())})}createVoiceSettingsMenu(){let o=$(`
        <button class="btn btn-xs voice-settings-btn" title="${__("Voice Settings")}">
        <i class="fa fa-cog"></i>
        </button>
        `);return o.on("click",()=>{this.showVoiceSettings()}),o}showVoiceSettings(){let o=new frappe.ui.Dialog({title:__("Voice Input Settings"),fields:[{fieldname:"auto_send",fieldtype:"Check",label:__("Auto-send after voice input"),default:this.autoSendAfterVoice?1:0},{fieldname:"keyboard_shortcut",fieldtype:"Check",label:__("Enable keyboard shortcut (Ctrl+Shift+V)"),default:this.voiceShortcutEnabled?1:0},{fieldname:"continuous_mode",fieldtype:"Check",label:__("Continuous listening mode"),default:0,description:__("Keep listening after each phrase")}],primary_action_label:__("Save"),primary_action:e=>{this.autoSendAfterVoice=e.auto_send,this.voiceShortcutEnabled=e.keyboard_shortcut,localStorage.setItem("chatbot-auto-send-voice",e.auto_send),localStorage.setItem("chatbot-voice-shortcut",e.keyboard_shortcut),this.voiceManager&&(this.voiceManager.recognition.continuous=e.continuous_mode),o.hide(),frappe.show_alert({message:__("Voice settings saved"),indicator:"green"})}});o.show()}};$(document).ready(function(){frappe.after_ajax(()=>{frappe.session.user=="Administrator"&&(gs_chat.instance=new gs_chat.ChatbotWidget)})});})();
//# sourceMappingURL=gs_chat.bundle.O52XP5NC.js.map
